# Generated by Django 4.2.7 on 2024-04-06 03:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Arhiv_Reestr_TMTS_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_reestr_tmts', models.IntegerField(verbose_name='id ТМЦ')),
                ('status', models.CharField(blank=True, max_length=25, verbose_name='Статус')),
                ('owner_TMTS', models.CharField(blank=True, max_length=150, verbose_name='Владелец ТМЦ')),
                ('name_TMTS', models.CharField(blank=True, max_length=150, verbose_name='Тип оборудования | Производитель | Модель')),
                ('serial_number', models.CharField(blank=True, db_index=True, max_length=50, verbose_name='S/N')),
                ('username_responsible_TMTS', models.CharField(blank=True, max_length=50, verbose_name='Учетная запись ответственного за ТМЦ')),
                ('responsible_TMTS', models.TextField(blank=True, verbose_name='Ответственный за ТМЦ')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='Локация/Кабинет')),
                ('created_reestr_tmts_model', models.DateTimeField(verbose_name='Дата создания записи')),
                ('creator_account', models.CharField(blank=True, max_length=75, verbose_name='Кем изменено/создано')),
                ('updated_reestr_tmts_model', models.DateTimeField(verbose_name='Дата изменения записи')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('start_of_operation_TMTS', models.DateTimeField(blank=True, null=True, verbose_name='Дата начала эксплуатации ТМЦ')),
                ('archived', models.BooleanField(default=False, verbose_name='Утилизация')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата действия')),
                ('action', models.CharField(blank=True, max_length=25, verbose_name='Действие')),
                ('creator_action', models.CharField(blank=True, max_length=75, verbose_name='Кем выполнено')),
            ],
            options={
                'verbose_name': 'Учет ТМЦ (архив)',
                'verbose_name_plural': '(4) Учет ТМЦ (архив)',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Arhiv_Reestr_TMTS_repair_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_reestr_tmts_repair', models.IntegerField(blank=True, verbose_name='id записи')),
                ('id_reestr_tmts', models.IntegerField(blank=True, verbose_name='id ТМЦ')),
                ('reestr_TMTS', models.TextField(blank=True, verbose_name='ТМЦ')),
                ('username_responsible_TMTS_repair', models.CharField(blank=True, max_length=50, verbose_name='Учетная запись ответственного за ремонт/обслуживание')),
                ('responsible_TMTS_repair', models.TextField(blank=True, verbose_name='Ответственный за ремонт/обслуживание')),
                ('created_reestr_tmts_repair', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата регистрации')),
                ('creator_account', models.CharField(blank=True, max_length=75, verbose_name='Кем изменено/создано')),
                ('updated_reestr_tmts_repair', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('comment', models.TextField(default='', verbose_name='Комментарий')),
                ('archived', models.BooleanField(default=False, verbose_name='Переведен в архив')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата действия')),
                ('action', models.CharField(blank=True, max_length=25, verbose_name='Действие')),
                ('creator_action', models.CharField(blank=True, max_length=75, verbose_name='Кем выполнено')),
            ],
            options={
                'verbose_name': 'Ремонт(обслуживание) ТМЦ (архив)',
                'verbose_name_plural': '(5) Ремонт(обслуживание) ТМЦ (архив)',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Image_Reestr_TMTS_repair_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_comment', models.TextField(default='', verbose_name='Описание')),
                ('picture', models.ImageField(upload_to='images/%Y-%m-%d/', verbose_name='Изображение')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата действия')),
                ('reestr_repair_TMTS', models.IntegerField(verbose_name='Ремонт ТМЦ (id в реестре)')),
            ],
            options={
                'verbose_name': 'Ремонт(обслуживание) ТМЦ (изображение)',
                'verbose_name_plural': '(6) Ремонт(обслуживание) ТМЦ (изображения)',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Name_TMTS_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(max_length=50, verbose_name='Производитель')),
                ('name_model', models.CharField(max_length=50, verbose_name='Модель')),
            ],
            options={
                'verbose_name': 'Модель ТМЦ',
                'verbose_name_plural': '(1) Модели ТМЦ',
                'ordering': ['type_TMTS', 'manufacturer', 'name_model'],
            },
        ),
        migrations.CreateModel(
            name='Owner_TMTS_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_legal_entity', models.CharField(max_length=150, verbose_name='Юридическое лицо')),
            ],
            options={
                'verbose_name': 'Владелец ТМЦ',
                'verbose_name_plural': '(1) Владелецы ТМЦ',
                'ordering': ['name_legal_entity'],
            },
        ),
        migrations.CreateModel(
            name='Reestr_TMTS_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(blank=True, db_index=True, max_length=50, verbose_name='S/N')),
                ('username_responsible_TMTS', models.CharField(blank=True, max_length=50, verbose_name='Учетная запись ответственного за ТМЦ')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='Локация/Кабинет')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('start_of_operation_TMTS', models.DateTimeField(blank=True, null=True, verbose_name='Дата начала эксплуатации ТМЦ')),
                ('archived', models.BooleanField(default=False, verbose_name='Утилизация')),
                ('creator_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Кем изменено/создано')),
                ('name_TMTS', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='laptop.name_tmts_model', verbose_name='Тип оборудования | Производитель | Модель')),
                ('owner_TMTS', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='laptop.owner_tmts_model', verbose_name='Владелец ТМЦ')),
            ],
            options={
                'verbose_name': 'Учет ТМЦ',
                'verbose_name_plural': '(3) Учет ТМЦ',
                'ordering': ['status', 'owner_TMTS', 'name_TMTS', 'username_responsible_TMTS'],
            },
        ),
        migrations.CreateModel(
            name='Responsible_TMTS_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=75, verbose_name='ФИО')),
                ('account', models.CharField(max_length=50, verbose_name='Учетная запись')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('distingished_name', models.CharField(max_length=175, verbose_name='Имя объекта')),
                ('company', models.CharField(blank=True, max_length=75, verbose_name='Юридическое лицо')),
                ('company_position', models.CharField(blank=True, max_length=100, verbose_name='Должность')),
                ('mobile', models.CharField(blank=True, max_length=35, verbose_name='Телефон (мобильный)')),
                ('telephone_number', models.CharField(blank=True, max_length=35, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Ответственный за ТМЦ',
                'verbose_name_plural': '(2) Ответственные за ТМЦ',
                'ordering': ['fio', 'account'],
            },
        ),
        migrations.CreateModel(
            name='Responsible_TMTS_repair_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=75, verbose_name='ФИО')),
                ('account', models.CharField(max_length=50, verbose_name='Учетная запись')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('distingished_name', models.CharField(max_length=175, verbose_name='Имя объекта')),
                ('company', models.CharField(blank=True, max_length=75, verbose_name='Юридическое лицо')),
                ('company_position', models.CharField(blank=True, max_length=100, verbose_name='Должность')),
                ('mobile', models.CharField(blank=True, max_length=35, verbose_name='Телефон (мобильный)')),
                ('telephone_number', models.CharField(blank=True, max_length=35, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Ответственный за ремонт/обслуживание',
                'verbose_name_plural': '(5) Ответственные за ремонт/обслуживание',
                'ordering': ['fio', 'account'],
            },
        ),
        migrations.CreateModel(
            name='Status_TMTS_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(db_index=True, max_length=25, unique=True, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': '(1) Статусы',
                'ordering': ['id', 'status'],
            },
        ),
        migrations.CreateModel(
            name='Type_TMTS_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_tmts', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Тип оборудования')),
            ],
            options={
                'verbose_name': 'Тип оборудования',
                'verbose_name_plural': '(1) Тип оборудования',
                'ordering': ['type_tmts'],
            },
        ),
        migrations.CreateModel(
            name='Reestr_TMTS_repair_Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username_responsible_TMTS_repair', models.CharField(blank=True, max_length=50, verbose_name='Учетная запись ответственного за ремонт/обслуживание')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата регистрации')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('comment', models.TextField(default='', verbose_name='Комментарий')),
                ('archived', models.BooleanField(default=False, verbose_name='Переведен в архив')),
                ('creator_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Кем изменено/создано')),
                ('reestr_TMTS', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='laptop.reestr_tmts_model', verbose_name='ТМЦ')),
                ('responsible_TMTS_repair', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='laptop.responsible_tmts_repair_model', verbose_name='Ответственный за ремонт/обслуживание')),
            ],
            options={
                'verbose_name': 'Ремонт(обслуживание) ТМЦ',
                'verbose_name_plural': '(5) Ремонт(обслуживание) ТМЦ',
                'ordering': ['created', 'responsible_TMTS_repair'],
            },
        ),
        migrations.AddField(
            model_name='reestr_tmts_model',
            name='responsible_TMTS',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='laptop.responsible_tmts_model', verbose_name='Ответственный за ТМЦ'),
        ),
        migrations.AddField(
            model_name='reestr_tmts_model',
            name='status',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='status_tmts_fk', to='laptop.status_tmts_model', verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='name_tmts_model',
            name='type_TMTS',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='laptop.type_tmts_model', verbose_name='Тип оборудования'),
        ),
        migrations.AddIndex(
            model_name='reestr_tmts_model',
            index=models.Index(fields=['serial_number'], name='laptop_rees_serial__74855d_idx'),
        ),
    ]
